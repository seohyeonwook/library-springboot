<?xml version="1.0" encoding="UTF-8" ?>
<!--0314-5-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.library.repository.UserMapper">

    <resultMap id="RoleResultMap" type="com.study.library.entity.Role">
        <id property="roleId" column="user_id" />
        <result property="roleName" column="role_name" />
        <result property="roleNameKor" column="role_name_kor" />
    </resultMap>

    <resultMap id="RoleRegisterResultMap" type="com.study.library.entity.RoleRegister">
        <id property="roleRegisterId" column="role_register_id" />
        <result property="userId" column="user_id" />
        <result property="roleId" column="role_id" />
        <association property="role" resultMap="RoleResultMap" />
    </resultMap>

    <resultMap id="OAuth2ResultMap" type="com.study.library.entity.OAuth2">
        <id property = "oAuth2Id" column="oauth2_id" />
        <result property="oAuth2Name" column="oauth2_name"/>
        <result property="userId" column="user_id"/>
        <result property="providerName" column="provider_name"/>
    </resultMap>

    <resultMap id="UserResultMap" type="com.study.library.entity.User">
        <id property="userId" column="user_id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <collection property="roleRegisters" javaType="list" resultMap="RoleRegisterResultMap" />
        <collection property="oAuth2s" javaType="List" resultMap="OAuth2ResultMap" />
    </resultMap>

    <insert id="saveUser"
            parameterType="com.study.library.entity.User"
            keyProperty="userId"
            useGeneratedKeys="true"
    >
<!--        오토 인크리먼트 / -->
        insert into user_tb
        values(0, #{username}, #{password}, #{name}, #{email}, now(), now())
    </insert>
<!--    아이디 이름 비번 치면 데이터 베이스에 잘 전달 되는지-->

    <insert id="saveRole" parameterType="integer">
        insert into role_register_tb
        values(0, #{userId}, 1, now(), now())
    </insert>
<!--     role 사용자 역할 부여-->
<!--    인설트는 성공횟수가 리턴 없어도 반환된다-->

    <select id="findRoleRegisterByUserIdAndRoleId" resultMap="RoleRegisterResultMap">
        select
            rrt.role_register_id,
            rrt.user_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor,
            rrt.create_date,
            rrt.update_date
        from
            role_register_tb rrt
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
        where
            rrt.user_id = #{userId}
            and rrt.role_id = #{roleId}

    </select>

    <select
            id="findUserByUsername"
            parameterType="string"
            resultMap="UserResultMap"
    >
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.name,
            ut.email,
            ut.create_date,
            ut.update_date,
            rrt.role_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor,
            oat.oauth2_id,
            oat.oauth2_name,
            oat.provider_name
        from
            user_tb ut
            left outer join role_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
            left outer join oauth2_tb oat on(oat.user_id = ut.user_id)
        where
             username = #{username}
    </select>

    <select id="findUserByOAuth2name" resultMap="UserResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.name,
            ut.email,
            ut.create_date,
            ut.update_date,
            rrt.role_register_id,
            rrt.role_id,
            rt.role_name,
            rt.role_name_kor,
            oat.oauth2_id,
            oat.oauth2_name,
            oat.provider_name
        from
            user_tb ut
            left outer join role_register_tb rrt on(rrt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = rrt.role_id)
            left outer join oauth2_tb oat on(oat.user_id = ut.user_id)
        where
            oat.oauth2_name = #{oAuth2Name}

    </select>

    <insert id="saveOAuth2" parameterType="com.study.library.entity.OAuth2">
        insert into oauth2_tb
        values(0, #{oAuth2Name}, #{userId}, #{providerName}, now(), now())
    </insert>
</mapper>